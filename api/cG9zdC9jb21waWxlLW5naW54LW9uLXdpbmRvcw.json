{"title":"Windows环境下编译Nginx并开启HTTP2","date":"2021-06-21T01:16:34.057Z","slug":"compile-nginx-on-windos","comments":true,"tags":["MSYS2","Mercurial","OpenSSL","PCRE","Perl","Windows","nginx","nginx编译","nmake","zlib"],"updated":"2021-06-23T00:20:40.213Z","content":"<h4 id=\"0x00：安装编译所需工具\">0x00：安装编译所需工具<a href=\"post/compile-nginx-on-windos#0x00：安装编译所需工具\"></a></h4><ul>\n<li>我本机有<code>Visual Studio 2010</code>就不再安装</li>\n<li><p><a href=\"https://www.msys2.org/\" target=\"_blank\" rel=\"noopener\">MSYS2</a><br><img src=\"../images/20210622/msys2.png\" alt=\"MSYS2\"></p>\n</li>\n<li><p><a href=\"https://www.activestate.com/products/perl/downloads/\" target=\"_blank\" rel=\"noopener\">ActivePerl</a><br><img src=\"../images/20210622/perl.png\" alt=\"Perl\"></p>\n</li>\n<li><p><a href=\"https://www.mercurial-scm.org/\" target=\"_blank\" rel=\"noopener\">Mercurial</a><br><img src=\"../images/20210622/mercurial.png\" alt=\"Mercurial\"></p>\n</li>\n</ul>\n<h4 id=\"0x01：安装Nginx编译模块\">0x01：安装Nginx编译模块<a href=\"post/compile-nginx-on-windos#0x01：安装Nginx编译模块\"></a></h4><ul>\n<li><p><a href=\"https://ftp.pcre.org/pub/pcre/\" target=\"_blank\" rel=\"noopener\">PCRE</a><br><img src=\"../images/20210622/pcre.png\" alt=\"PCRE\"></p>\n</li>\n<li><p><a href=\"https://ftp.pcre.org/pub/pcre/\" target=\"_blank\" rel=\"noopener\">zlib</a><br><img src=\"../images/20210622/zlib.png\" alt=\"zlib\"></p>\n</li>\n<li><p><a href=\"https://www.openssl.org/source/\" target=\"_blank\" rel=\"noopener\">OpenSSL</a><br><img src=\"../images/20210622/openssl.png\" alt=\"OpenSSL\"></p>\n</li>\n</ul>\n<h4 id=\"0x02：下载Nginx包\">0x02：下载Nginx包<a href=\"post/compile-nginx-on-windos#0x02：下载Nginx包\"></a></h4><p>打开<code>MSYS2</code>运行命令<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hg <span class=\"built_in\">clone</span> http://hg.nginx.org/nginx</span><br></pre></td></tr></table></figure></p>\n<p>创建目录<code>objs</code>和<code>objs/lib</code><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir objs</span><br><span class=\"line\">mkdir objs/lib</span><br></pre></td></tr></table></figure></p>\n<p>将<code>pcre</code>、<code>zlib</code>、<code>openssl</code>解压至<code>objs/lib</code>目录下</p>\n<h4 id=\"0x03：生成Makefile\">0x03：生成Makefile<a href=\"post/compile-nginx-on-windos#0x03：生成Makefile\"></a></h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">auto/configure \\</span><br><span class=\"line\">    --with-cc=cl \\</span><br><span class=\"line\">    --with-debug \\</span><br><span class=\"line\">    --prefix= \\</span><br><span class=\"line\">    --conf-path=conf/nginx.conf \\</span><br><span class=\"line\">    --pid-path=logs/nginx.pid \\</span><br><span class=\"line\">    --http-log-path=logs/access.log \\</span><br><span class=\"line\">    --error-log-path=logs/error.log \\</span><br><span class=\"line\">    --sbin-path=nginx.exe \\</span><br><span class=\"line\">    --http-client-body-temp-path=temp/client_body_temp \\</span><br><span class=\"line\">    --http-proxy-temp-path=temp/proxy_temp \\</span><br><span class=\"line\">    --http-fastcgi-temp-path=temp/fastcgi_temp \\</span><br><span class=\"line\">    --http-scgi-temp-path=temp/scgi_temp \\</span><br><span class=\"line\">    --http-uwsgi-temp-path=temp/uwsgi_temp \\</span><br><span class=\"line\">    --with-cc-opt=-DFD_SETSIZE=1024 \\</span><br><span class=\"line\">    --with-pcre=objs/lib/pcre-8.44 \\</span><br><span class=\"line\">    --with-zlib=objs/lib/zlib-1.2.11 \\</span><br><span class=\"line\">    --with-openssl=objs/lib/openssl-1.1.1k \\</span><br><span class=\"line\">    --with-openssl-opt=no-asm \\</span><br><span class=\"line\">    --with-http_ssl_module \\</span><br><span class=\"line\">    --with-http_stub_status_module \\</span><br><span class=\"line\">    --with-http_v2_module</span><br></pre></td></tr></table></figure>\n<h4 id=\"0x04：编译Nginx\">0x04：编译Nginx<a href=\"post/compile-nginx-on-windos#0x04：编译Nginx\"></a></h4><p>运行<code>cmd</code>进入<code>nginx</code>目录输入<code>nmake</code><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nmake</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"0x05：运行Nginx\">0x05：运行Nginx<a href=\"post/compile-nginx-on-windos#0x05：运行Nginx\"></a></h4><p>将编译生成地<code>nginx.exe</code>拷贝至老版本的Nginx目录子即可(<code>做好备份</code>)</p>\n<h4 id=\"0x06：常见错误\">0x06：常见错误<a href=\"post/compile-nginx-on-windos#0x06：常见错误\"></a></h4><ul>\n<li>未找到<code>nmake</code>命令<br>将<code>D:\\Microsoft Visual Studio 10.0\\VC\\bin</code> 设置到环境变量<code>path</code>中</li>\n<li>未找到<code>mspdb100.dll</code><br>将<code>D:\\Microsoft Visual Studio 10.0\\Common7\\IDE</code>中的<code>mspdbsrv.exe</code>、<code>mspdbcore.dll</code>、<code>mspdb100.dll</code>、<code>msobj100.dll</code>拷贝到<code>D:\\Microsoft Visual Studio 10.0\\VC\\bin</code></li>\n<li><p><code>Can&#39;t locate Win32/Console.pm at /Perl64/site/lib/ActivePerl/Config.pm line 400</code><br>注释掉<code>_warn</code></p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> _<span class=\"title\">warn</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">#   my($msg) = @_;</span></span><br><span class=\"line\">  <span class=\"comment\">#   unless (-t STDOUT) &#123;</span></span><br><span class=\"line\">  <span class=\"comment\"># print \"\\n$msg\\n\";</span></span><br><span class=\"line\">  <span class=\"comment\"># return;</span></span><br><span class=\"line\">  <span class=\"comment\">#   &#125;</span></span><br><span class=\"line\">  <span class=\"comment\">#   require Win32::Console;</span></span><br><span class=\"line\">  <span class=\"comment\">#   unless ($console) &#123;</span></span><br><span class=\"line\">  <span class=\"comment\"># $console = Win32::Console-&gt;new(Win32::Console::STD_OUTPUT_HANDLE());</span></span><br><span class=\"line\">  <span class=\"comment\">#   &#125;</span></span><br><span class=\"line\">  <span class=\"comment\">#   my($col,undef) = $console-&gt;Size;</span></span><br><span class=\"line\">  <span class=\"comment\">#   print \"\\n\";</span></span><br><span class=\"line\">  <span class=\"comment\">#   my $attr = $console-&gt;Attr;</span></span><br><span class=\"line\">  <span class=\"comment\">#   $console-&gt;Attr($Win32::Console::FG_RED | $Win32::Console::BG_WHITE);</span></span><br><span class=\"line\">  <span class=\"comment\">#   for (split(/\\n/, \"$msg\")) &#123;</span></span><br><span class=\"line\">  <span class=\"comment\"># $_ .= \" \" while length() &lt; $col-1;</span></span><br><span class=\"line\">  <span class=\"comment\"># print \"$_\\n\";</span></span><br><span class=\"line\">  <span class=\"comment\">#   &#125;</span></span><br><span class=\"line\">  <span class=\"comment\">#   $console-&gt;Attr($attr);</span></span><br><span class=\"line\">  <span class=\"comment\">#   print \"\\n\";</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>未找到头文件<code>\\nginx\\objs\\lib\\openssl-1.1.1k\\include\\internal/cryptlib.h(13) : fatal error C1083: 无法打开包括文件:“stdlib.h”: No such file or directory</code>(其他头文件错误也一样操作)<ul>\n<li>打开<code>cmd</code>进入<code>D:\\Microsoft Visual Studio 10.0\\VC</code>目录后输入<code>vcvarsall.bat</code></li>\n<li>进入<code>nginx</code>目录后输入<code>nmake</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>未找到<code>sed</code>命令<ul>\n<li>安装<a href=\"https://webwerks.dl.sourceforge.net/project/gnuwin32//sed/4.2.1/sed-4.2.1-setup.exe\" target=\"_blank\" rel=\"noopener\">sed</a><br><img src=\"../images/20210622/sed.png\" alt=\"sed\">\\</li>\n</ul>\n</li>\n<li>Wno-deprecated-declarations<br> 打开<code>objs\\Makefile</code>删除<code>-Wno-deprecated-declarations</code></li>\n</ul>\n","next":{"title":"CentOS编译安装Nginx并启用Brotli压缩和HTTP2","slug":"compile-nginx-on-centos"},"link":"https://www.alipay.one/post/compile-nginx-on-windos/"}