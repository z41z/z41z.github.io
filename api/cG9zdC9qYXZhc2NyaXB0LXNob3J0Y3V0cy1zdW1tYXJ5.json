{"title":"JavaScript 简写与高效写法手册","date":"2025-09-25T00:57:57.177Z","slug":"javascript-shortcuts-summary","comments":true,"tags":["JS","JavaScript","前端","可选链","浅拷贝","深拷贝","箭头函数","高阶函数"],"updated":"2025-09-25T01:02:57.086Z","content":"<h2 id=\"1-箭头函数简写\">1. 箭头函数简写<a href=\"post/javascript-shortcuts-summary#1-箭头函数简写\"></a></h2><p>箭头函数提供了更简洁的函数定义方式，尤其适合回调、数组操作和高阶函数。</p>\n<h3 id=\"1-1-单行返回\">1.1 单行返回<a href=\"post/javascript-shortcuts-summary#1-1-单行返回\"></a></h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 普通写法</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\">a, b</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> a + b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 箭头函数简写</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> add = <span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> a + b;</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-2-单个参数省略括号\">1.2 单个参数省略括号<a href=\"post/javascript-shortcuts-summary#1-2-单个参数省略括号\"></a></h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> square = <span class=\"function\"><span class=\"params\">x</span> =&gt;</span> x * x;</span><br><span class=\"line\"><span class=\"keyword\">const</span> greet = <span class=\"function\"><span class=\"params\">name</span> =&gt;</span> <span class=\"string\">`Hello, <span class=\"subst\">$&#123;name&#125;</span>`</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-3-返回对象必须加括号\">1.3 返回对象必须加括号<a href=\"post/javascript-shortcuts-summary#1-3-返回对象必须加括号\"></a></h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> makeObj = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> (&#123; <span class=\"attr\">a</span>: <span class=\"number\">1</span>, <span class=\"attr\">b</span>: <span class=\"number\">2</span> &#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-4-数组方法结合箭头函数\">1.4 数组方法结合箭头函数<a href=\"post/javascript-shortcuts-summary#1-4-数组方法结合箭头函数\"></a></h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> nums = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> doubled = nums.map(<span class=\"function\"><span class=\"params\">n</span> =&gt;</span> n * <span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> filtered = nums.filter(<span class=\"function\"><span class=\"params\">n</span> =&gt;</span> n &gt; <span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> found = nums.find(<span class=\"function\"><span class=\"params\">n</span> =&gt;</span> n === <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-5-高阶函数返回函数\">1.5 高阶函数返回函数<a href=\"post/javascript-shortcuts-summary#1-5-高阶函数返回函数\"></a></h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> add = <span class=\"function\"><span class=\"params\">x</span> =&gt;</span> y =&gt; x + y;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(add(<span class=\"number\">2</span>)(<span class=\"number\">3</span>)); <span class=\"comment\">// 5</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"1-6-条件执行和逻辑运算\">1.6 条件执行和逻辑运算<a href=\"post/javascript-shortcuts-summary#1-6-条件执行和逻辑运算\"></a></h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> logIf = <span class=\"function\"><span class=\"params\">msg</span> =&gt;</span> condition =&gt; condition &amp;&amp; <span class=\"built_in\">console</span>.log(msg);</span><br><span class=\"line\">logIf(<span class=\"string\">'Hello'</span>)(<span class=\"literal\">true</span>); <span class=\"comment\">// 打印 Hello</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"2-非箭头函数简写\">2. 非箭头函数简写<a href=\"post/javascript-shortcuts-summary#2-非箭头函数简写\"></a></h2><h3 id=\"2-1-对象属性简写\">2.1 对象属性简写<a href=\"post/javascript-shortcuts-summary#2-1-对象属性简写\"></a></h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> name = <span class=\"string\">'Li'</span>, age = <span class=\"number\">18</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> person = &#123; name, age &#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2-对象方法简写\">2.2 对象方法简写<a href=\"post/javascript-shortcuts-summary#2-2-对象方法简写\"></a></h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> obj = &#123;</span><br><span class=\"line\">  say(msg) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(msg);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">obj.say(<span class=\"string\">'Hello'</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-3-模板字符串\">2.3 模板字符串<a href=\"post/javascript-shortcuts-summary#2-3-模板字符串\"></a></h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> user = <span class=\"string\">'Li'</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> greeting = <span class=\"string\">`Hello <span class=\"subst\">$&#123;user&#125;</span>!`</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-4-解构赋值\">2.4 解构赋值<a href=\"post/javascript-shortcuts-summary#2-4-解构赋值\"></a></h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 数组</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> [a, b] = arr; <span class=\"comment\">// a=1, b=2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 对象</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> obj = &#123; <span class=\"attr\">x</span>: <span class=\"number\">10</span>, <span class=\"attr\">y</span>: <span class=\"number\">20</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; x, y &#125; = obj;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-5-默认参数\">2.5 默认参数<a href=\"post/javascript-shortcuts-summary#2-5-默认参数\"></a></h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">greet</span>(<span class=\"params\">name = <span class=\"string\">'Guest'</span></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">`Hi, <span class=\"subst\">$&#123;name&#125;</span>`</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">greet(); <span class=\"comment\">// Hi, Guest</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-6-三元运算符\">2.6 三元运算符<a href=\"post/javascript-shortcuts-summary#2-6-三元运算符\"></a></h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> age = <span class=\"number\">20</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> status = age &gt;= <span class=\"number\">18</span> ? <span class=\"string\">'adult'</span> : <span class=\"string\">'child'</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-7-短路逻辑\">2.7 短路逻辑<a href=\"post/javascript-shortcuts-summary#2-7-短路逻辑\"></a></h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> name = input || <span class=\"string\">'default'</span>; <span class=\"comment\">// 如果 input 假值，则使用默认值</span></span><br><span class=\"line\">flag &amp;&amp; doSomething(); <span class=\"comment\">// 如果 flag 为真，则执行函数</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-8-可选链-amp-空值合并\">2.8 可选链 &amp; 空值合并<a href=\"post/javascript-shortcuts-summary#2-8-可选链-amp-空值合并\"></a></h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> city = user?.address?.city; <span class=\"comment\">// 防止 undefined 报错</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> port = config.port ?? <span class=\"number\">3000</span>; <span class=\"comment\">// null/undefined 用默认值</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-9-数组-对象展开\">2.9 数组/对象展开<a href=\"post/javascript-shortcuts-summary#2-9-数组-对象展开\"></a></h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr1 = [<span class=\"number\">1</span>,<span class=\"number\">2</span>], arr2 = [<span class=\"number\">3</span>,<span class=\"number\">4</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> mergedArr = [...arr1, ...arr2]; <span class=\"comment\">// [1,2,3,4]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> base = &#123;<span class=\"attr\">a</span>:<span class=\"number\">1</span>, <span class=\"attr\">b</span>:<span class=\"number\">2</span>&#125;, extra = &#123;<span class=\"attr\">b</span>:<span class=\"number\">3</span>, <span class=\"attr\">c</span>:<span class=\"number\">4</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> mergedObj = &#123;...base, ...extra&#125;; <span class=\"comment\">// &#123;a:1, b:3, c:4&#125;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-10-交换变量\">2.10 交换变量<a href=\"post/javascript-shortcuts-summary#2-10-交换变量\"></a></h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"number\">1</span>, b = <span class=\"number\">2</span>;</span><br><span class=\"line\">[a, b] = [b, a]; <span class=\"comment\">// a=2, b=1</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"3-高效写法推荐\">3. 高效写法推荐<a href=\"post/javascript-shortcuts-summary#3-高效写法推荐\"></a></h2><h3 id=\"3-1-对象映射替代-if-else\">3.1 对象映射替代 if-else<a href=\"post/javascript-shortcuts-summary#3-1-对象映射替代-if-else\"></a></h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> status = <span class=\"string\">'fail'</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> color = (&#123; <span class=\"attr\">success</span>: <span class=\"string\">'green'</span>, <span class=\"attr\">fail</span>: <span class=\"string\">'red'</span> &#125;[status]) || <span class=\"string\">'gray'</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-2-数组去重\">3.2 数组去重<a href=\"post/javascript-shortcuts-summary#3-2-数组去重\"></a></h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> unique = [...new <span class=\"built_in\">Set</span>(arr)]; <span class=\"comment\">// [1,2,3]</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-3-函数条件执行\">3.3 函数条件执行<a href=\"post/javascript-shortcuts-summary#3-3-函数条件执行\"></a></h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">onClick?.(); <span class=\"comment\">// 仅当 onClick 存在时调用</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-4-数组生成\">3.4 数组生成<a href=\"post/javascript-shortcuts-summary#3-4-数组生成\"></a></h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = <span class=\"built_in\">Array</span>.from(&#123; <span class=\"attr\">length</span>: <span class=\"number\">5</span> &#125;, (_, i) =&gt; i); <span class=\"comment\">// [0,1,2,3,4]</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-5-数组求和-最大值\">3.5 数组求和 / 最大值<a href=\"post/javascript-shortcuts-summary#3-5-数组求和-最大值\"></a></h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> sum = arr.reduce(<span class=\"function\">(<span class=\"params\">a,b</span>) =&gt;</span> a+b, <span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> max = <span class=\"built_in\">Math</span>.max(...arr);</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-6-浅拷贝\">3.6 浅拷贝<a href=\"post/javascript-shortcuts-summary#3-6-浅拷贝\"></a></h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 数组浅拷贝</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> arrCopy = [...arr];</span><br><span class=\"line\"><span class=\"comment\">// 对象浅拷贝</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> objCopy = &#123;...obj&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-7-深拷贝\">3.7 深拷贝<a href=\"post/javascript-shortcuts-summary#3-7-深拷贝\"></a></h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 推荐方式</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> deepCopy1 = structuredClone(obj);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// JSON 方法（注意：函数、undefined、循环引用无法正确拷贝）</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> deepCopy2 = <span class=\"built_in\">JSON</span>.parse(<span class=\"built_in\">JSON</span>.stringify(obj));</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-8-高阶函数与逻辑组合\">3.8 高阶函数与逻辑组合<a href=\"post/javascript-shortcuts-summary#3-8-高阶函数与逻辑组合\"></a></h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> multiply = <span class=\"function\"><span class=\"params\">x</span> =&gt;</span> y =&gt; x*y;</span><br><span class=\"line\"><span class=\"keyword\">const</span> result = multiply(<span class=\"number\">2</span>)(<span class=\"number\">3</span>); <span class=\"comment\">// 6</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-9-代码安全与可读性\">3.9 代码安全与可读性<a href=\"post/javascript-shortcuts-summary#3-9-代码安全与可读性\"></a></h3><ul>\n<li>使用 <code>?.</code>、<code>??</code> 避免 undefined/null 错误</li>\n<li>使用模板字符串提高可读性</li>\n<li>使用解构、展开和默认参数减少重复代码</li>\n</ul>\n<h2 id=\"总结\">总结<a href=\"post/javascript-shortcuts-summary#总结\"></a></h2><ul>\n<li><strong>箭头函数简写</strong> → 省括号、省 return，返回对象要加 ()</li>\n<li><strong>ES6+ 语法糖</strong> → 解构、展开、模板字符串、默认值、可选链</li>\n<li><strong>高效写法</strong> → ?. / ?? / || / &amp;&amp;，Set 去重，对象映射代替 if-else，Array.from 快速生成数组</li>\n</ul>\n<p><em>本手册适合快速查阅日常开发常用的 JavaScript 简写与高效写法，所有示例可直接在浏览器或 Node.js 中执行</em></p>\n","next":{"title":"基于信创国产化离线实施部署的问题记录合集","slug":"信创国产化问题合集"},"link":"https://www.alipay.one/post/javascript-shortcuts-summary/","toc":[{"title":"1. 箭头函数简写","id":"1-箭头函数简写","index":"1","children":[{"title":"1.1 单行返回","id":"1-1-单行返回","index":"1.1"},{"title":"1.2 单个参数省略括号","id":"1-2-单个参数省略括号","index":"1.2"},{"title":"1.3 返回对象必须加括号","id":"1-3-返回对象必须加括号","index":"1.3"},{"title":"1.4 数组方法结合箭头函数","id":"1-4-数组方法结合箭头函数","index":"1.4"},{"title":"1.5 高阶函数返回函数","id":"1-5-高阶函数返回函数","index":"1.5"},{"title":"1.6 条件执行和逻辑运算","id":"1-6-条件执行和逻辑运算","index":"1.6"}]},{"title":"2. 非箭头函数简写","id":"2-非箭头函数简写","index":"2","children":[{"title":"2.1 对象属性简写","id":"2-1-对象属性简写","index":"2.1"},{"title":"2.2 对象方法简写","id":"2-2-对象方法简写","index":"2.2"},{"title":"2.3 模板字符串","id":"2-3-模板字符串","index":"2.3"},{"title":"2.4 解构赋值","id":"2-4-解构赋值","index":"2.4"},{"title":"2.5 默认参数","id":"2-5-默认参数","index":"2.5"},{"title":"2.6 三元运算符","id":"2-6-三元运算符","index":"2.6"},{"title":"2.7 短路逻辑","id":"2-7-短路逻辑","index":"2.7"},{"title":"2.8 可选链 &amp; 空值合并","id":"2-8-可选链-amp-空值合并","index":"2.8"},{"title":"2.9 数组/对象展开","id":"2-9-数组-对象展开","index":"2.9"},{"title":"2.10 交换变量","id":"2-10-交换变量","index":"2.10"}]},{"title":"3. 高效写法推荐","id":"3-高效写法推荐","index":"3","children":[{"title":"3.1 对象映射替代 if-else","id":"3-1-对象映射替代-if-else","index":"3.1"},{"title":"3.2 数组去重","id":"3-2-数组去重","index":"3.2"},{"title":"3.3 函数条件执行","id":"3-3-函数条件执行","index":"3.3"},{"title":"3.4 数组生成","id":"3-4-数组生成","index":"3.4"},{"title":"3.5 数组求和 / 最大值","id":"3-5-数组求和-最大值","index":"3.5"},{"title":"3.6 浅拷贝","id":"3-6-浅拷贝","index":"3.6"},{"title":"3.7 深拷贝","id":"3-7-深拷贝","index":"3.7"},{"title":"3.8 高阶函数与逻辑组合","id":"3-8-高阶函数与逻辑组合","index":"3.8"},{"title":"3.9 代码安全与可读性","id":"3-9-代码安全与可读性","index":"3.9"}]},{"title":"总结","id":"总结","index":"4"}]}